# ReaKontrol
# SConscript for architecture-specific building of the source
# Author: James Teh <jamie@jantrid.net>
# Copyright 2015-2017 NV Access Limited, James Teh
# License: GNU General Public License version 2.0

Import("env")
import platform
import SCons.Script

os_platform = SCons.Platform.platform_default() 
darwin_mohave = 18  # We have to use the version of the Darwin shell and not the Mac OSX version
release_str = platform.release() 
release_major = int(release_str.split('.')[0])

env.Append(CPPPATH=("#include", "#include/WDL"))

sources = [
	"main.cpp",
"mcu.cpp",
"niMidi.cpp"
]

if os_platform == 'win32':
	libs = ["ws2_32", "winmm"]

	env.Append(CPPFLAGS="/EHsc")
# We always want debug symbols.
	env.Append(PDB="${TARGET}.pdb")
# having symbols usually turns this off, but we have no need for unused symbols.
	env.Append(LINKFLAGS='/OPT:REF')
	env.SharedLibrary(
		target="reaper_kontrol",
		source=sources, LIBS=libs
	)

else:  # Mac
	if release_major < darwin_mohave:       # High Sierra or earlier
		swellDir = env.Dir("#include/WDL/WDL/swell")	
		env.Append(CPPPATH=(swellDir,))
		env["CXX"] = "clang++"
		# Build a universal binary with both 32 and 64 bit.
		archFlags = ("-arch", "i386", "-arch", "x86_64")
		env.Append(CXXFLAGS=archFlags, LINKFLAGS=archFlags)
		env.Append(CXXFLAGS=("-stdlib=libc++", "-std=c++11"))
		# SWELL files.
		sources.extend(swellDir.File(f) for f in (
			"swell.cpp", "swell-ini.cpp", "swell-dlg.mm", "swell-gdi.mm",
			"swell-kb.mm", "swell-misc.mm", "swell-miscdlg.mm", "swell-menu.mm",
			"swell-wnd.mm", "swell-modstub.mm",
		))
		libs = []
		# OS X frameworks.
		for f in ("Cocoa", "Carbon", "Appkit"):
			env.Append(LINKFLAGS=("-framework", f))
		# We don't want the "lib" prefix for our dylib.
		env["SHLIBPREFIX"] = ""

	else:       # Mohave or later
		print( "Unable to build on Mohave")
