# ReaKontrol - host integration plug-in for Reaper and Native Instruments controllers
# SConstruct
# Author: James Teh <jamie@jantrid.net>
# Modified for Mac builds by Tim Burgess <tim@raisedbar.net>
# License: GNU General Public License version 2.0

import os
import platform

vars = Variables()
vars.Add("version", "The version of this build", "unknown")
vars.Add("publisher", "The publisher of this build", "unknown")
env = Environment(variables=vars,
	copyright="Copyright (C) 2014-2017 NV Access Limited, James Teh & other contributors",
)

if env["PLATFORM"] == "win32":
	for arch, suffix in (("x86", "32"), ("x86_64", "64")):
		archEnv = Environment(TARGET_ARCH=arch, libSuffix=suffix,
			# Hack around an odd bug where some tool after msvc states that static and shared objects are different.
			STATIC_AND_SHARED_OBJECTS_ARE_THE_SAME=1)
		archEnv.SConscript("src/archBuild_sconscript",
			exports={"env": archEnv},
			variant_dir="build/%s" % arch, duplicate=False)

	import _winreg
	# Get the path to makensis.
	try:
		with _winreg.OpenKey(_winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\NSIS") as nsisKey:
			makensis = os.path.join(_winreg.QueryValueEx(nsisKey, None)[0], "makensis.exe")
	except WindowsError:
		makensis = "makensis"
	installer = env.Command("installer/osara_${version}.exe", ["installer/osara.nsi", "build"],
		[[makensis, "/V2",
		"/DVERSION=$version", '/DPUBLISHER="$publisher"','/DCOPYRIGHT="$copyright"',
		"/DOUTFILE=${TARGET.abspath}",
		"$SOURCE"]])

else: # Mac
	env["libSuffix"] = ""
	env.SConscript("src/archBuild_sconscript",
		exports={"env": env},
		variant_dir="build", duplicate=False)
